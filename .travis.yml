sudo: false

language: python

matrix:
  include:
    - os: linux
      sudo: false
      python: 2.7
    - os: linux
      sudo: false
      python: 2.7
      env: MYPYTHON=jython - JYTHON_URL="http://search.maven.org/remotecontent?filepath=org/python/jython-installer/2.7.0/jython-installer-2.7.0.jar"
    - os: linux
      sudo: false
      python: 2.7
      env: MYPYTHON=jython - JYTHON_URL="http://search.maven.org/remotecontent?filepath=org/python/jython-installer/2.7.1b3/jython-installer-2.7.1b3.jar"
    - os: linux
      sudo: false
      python: 2.7
    - os: osx
      language: generic
env:
  global:
    - MYPYTHON=python

cache:
  directories:
    - $HOME/.cache/pip

before_install:
    - |
        # Install jython
        if [ "$MYPYTHON" == "jython" ]; then
          deactivate
          wget $JYTHON_URL -O jython_installer.jar;
          java -jar jython_installer.jar -s -d $HOME/jython;
          export PATH=$HOME/jython/bin:$PATH;
          jython -c "print ''";
          jython -c "import sys; print sys.version"
        fi
        if [[ $TRAVIS_OS_NAME == 'osx' ]]; then
          /usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)"
          brew install python3
          python3 --version
        fi

install:
    - |
        # Install dependencies
        pip install --upgrade pip
        pip install --upgrade wheel
        pip install --upgrade setuptools
        pip install --upgrade ply pep8 mako pytest
        if [ "$MYPYTHON" == "python" ]; then
          pip install pytest-cov codecov
        fi

script:

  - |
      # Build parsetab and run tests
      $MYPYTHON -c "from pyoracc import _generate_parsetab; _generate_parsetab()"
      echo "Running tests"
      if [ "$MYPYTHON" == "jython" ]; then
        py.test
      else
        py.test --cov=pyoracc --cov-report xml --runslow
      fi

  - pep8 --exclude=parsetab.py .
  
after_success:
  - |
      if [ "$MYPYTHON" == "python" ]; then
        codecov
      fi
